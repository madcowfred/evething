* documentation:
  - Pages need to explain what the hell they do
    = Help link somewhere?
  - http://www.readthedocs.org/
  - Build a page for evething.org
  -- Some sort of exciting exploration of features I guess!

* features:
  - Industry jobs:
    = Events for job installation/completion/etc
    = Some sort of success rate tracker for invention?
  - Wallet journal:
    = ISK per hour graph for mission rewards/rat bounties/etc
    = Corporation graph too?
  - Email warnings
    = Let user configure email address (save to auth_user email field?)
      # Implement email verification because people are idiots
    = Configurable:
      # Frequency (once, hourly, daily)
        % Will need another damn new database model to store events that have been issued
      # Things to email about (insufficient clone, room in skill queue, account not in training, account time <10 days)
  - Notifications
    = Does anyone actually care about notifications?

* misc:
  - Implement proper APIKey access_mask checks:
    = User A has a full (all masks) key for account 'example'
    = User B has a minimal (say, basic character info only) key for account 'example'
    = User B can actually see all data related to this account, even though their APIKey.access_mask is much more limited
    = Will require modifying all view code to use .extra() and a binary AND on the access_mask field, ugh
      # apikey.get_masks() and comparing the list to apikey.foo_MASK maybe? Possibly slow.

* tasks:
  - Make SystemEvent objects for admin-related events
  - Do something about fixing the godawful mess where adding a task requires editing multiple places.
    Maybe move task settings (queue, required mask, URL) to class variables and hack together some
    sort of Celery task autodiscover? I'm sure it's possible :v

* tasks.industryjobs:
  - SIGH. Work out what in the hell is going on here.

* tasks.price_updater:
  - Add support for other sources of market data (EVE-Central, EVEMarketData?)

* tests:
  - Check that all page views return a correct OK/KABOOM response.
  - Check that database modification views (account, blueprints, etc) do what they should.
  - Check model calculations (skill completion, blueprint calculations, etc).

* views.account:
  - Move Event Log to this page
  - Add a way to create Campaign objects
  - API Keys:
    = Warn when a key doesn't have the required mask to pull AccountStatus (game time warnings)
    = Display "data for this key has not yet been pulled" instead of just NONE NONE NONE
    = Explain how API data is pulled
    = Some way to see last pull/next pull time for each API call related to a key

* views.assets:
  - Filter by unit price, < = > comparisons.
  - Change the default query type from exact match to contains.
  - Add a fourth query type which is does not contain.
  - Add the ability to query only personal assets, corp assets or both.
  - Add summary by region and filter by region.

* views.blueprints:
  - Work out a sane way to be able to say "I want to make 100 Blackbirds and 300 rigs to go on them" and get
    a BPCalc summary page out of it.
  - Profitability dumping to buys instead of using sells?

* views.character:
  - Make categories expandable/collapsible
  - Expand all/collapse all JavaScript links
  - Standings tab needs agent standings
  - Ability to see a post-skill-plan character sheet?
  - Add employment history
  - Skill tooltips:
    = Should display training time for each further level

* views.contracts:
  - Summary table similar to orders

* views.home:
  - Add options to hide corp wallet/event log sections
  - Add options to ignore specific notifications for specific characters.

* views.skillplan
  - Add items/ships/certificates browser to add skill based on these points.